@use 'variables' as variable;

//Typography
@mixin HeadingLarge {
  color: variable.$rich-black;
  font-weight: variable.$bold;
  font-size: variable.$font-36;
  line-height: variable.$line-height-32;
  letter-spacing: variable.$letter-spacing-minus-1;
}

@mixin HeadingMedium {
  color: variable.$rich-black;
  font-weight: variable.$bold;
  font-size: variable.$font-24;
  line-height: variable.$line-height-22;
  letter-spacing: variable.$letter-spacing-minus-0-75;
}

@mixin HeadingSmall($variant) {
  color: variable.$rich-black;
  font-weight: variable.$bold;
  font-size: variable.$font-15;
  letter-spacing: variable.$letter-spacing-minus-0-25;

  @if $variant == spaced-out {
    line-height: variable.$line-height-24;
  }

  @if $variant == balanced {
    line-height: variable.$line-height-20;
  }

  @if $variant == compact {
    line-height: variable.$line-height-15;
  }
}

@mixin BodyFont($variant) {
  color: variable.$rich-black;
  font-size: variable.$font-13;
  font-weight: variable.$medium;
  letter-spacing: variable.$letter-spacing-minus-0-10;

  @if $variant == spaced-out {
    line-height: variable.$line-height-18;
  }

  @if $variant == compact {
    line-height: variable.$line-height-15;
  }
}

@mixin ErrorMessage {
  color: variable.$indian-red;
  font-size: variable.$font-10;
  font-weight: variable.$semi-bold;
  line-height: variable.$line-height-15;
  letter-spacing: variable.$letter-spacing-minus-0-20;
}

//Elements
@mixin FormInput {
  width: 100%;
  height: 3rem;
  outline: transparent;
  border-radius: 0.25rem;
  padding-inline: 1.25rem 1rem;
  background-color: transparent;
  border: 1px solid variable.$lavender;
  @include HeadingSmall(compact);
  color: variable.$black;

  &:focus {
    caret-color: variable.$electric-indigo;
    border-color: variable.$electric-indigo;
  }
}

@mixin Button($background, $color, $hover-background, $hover-color) {
  @include HeadingSmall(compact);
  height: 3rem;
  color: $color;
  display: flex;
  cursor: pointer;
  border: transparent;
  align-items: center;
  border-radius: 1.5rem;
  padding-inline: 1.5rem;
  justify-content: center;
  background-color: $background;
  transition: all variable.$ease-200ms;

  &:hover {
    color: $hover-color;
    background-color: $hover-background;
  }
}

//Effects
@mixin VignetteEffect {
  -webkit-box-shadow: inset 0px -150px 125px -135px variable.$transparent-black-50;
  -moz-box-shadow: inset 0px -150px 125px -135px variable.$transparent-black-50;
  box-shadow: inset 0px -175px 125px -135px variable.$transparent-black-50;

  @media (width <= variable.$tablet) {
    box-shadow: inset 0px -200px 125px -135px variable.$transparent-black-50;
  }
}

//Animations
@mixin FadeInAnimation($container, $animationSettings) {
  .#{$container} {
    animation: fadeIn $animationSettings;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}

@mixin ShowModalAnimation($container, $animationSettings) {
  .#{$container} {
    animation: showModal $animationSettings;
  }

  @keyframes showModal {
    from {
      scale: -5%;
    }
    to {
      scale: initial;
    }
  }
}
